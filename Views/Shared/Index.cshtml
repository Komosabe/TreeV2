@using TreeV2.NodeDto
@model IList<TreeV2.Entities.Node>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "TreeV2";
}

<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>

<div class="w-100 text-center bg-danger">
    @ViewData["Message"]
</div>

<div class="d-flex" id="app">
    <div class="w-25">
        @{
            var createNodeDto = new CreateNodeDto()
            {
                Parent = Model.ToList().ConvertAll(i => new SelectListItem()
                {
                    Text = i.Id + ". " + i.Name,
                    Value = i.Id.ToString(),
                    Selected = false
                })
            };
            await Html.RenderPartialAsync("_CreateForm", createNodeDto);
        }

    </div>
    <div class="w-75">
        @{
            var editNodeDto = new EditNodeDto()
            {
                Nodes = Model.ToList()
            };

            await Html.RenderPartialAsync("_EditForm", editNodeDto);
        }
    </div>
</div>

<script>
    var vueApp = new Vue({
        el: '#app',
        data: {
        },
        methods: {
            toggle: (e) => {
                let list = e.target.parentNode.querySelector("ul").style;
                list.display != "none" ? list.display = "none" : list.display = "block";
            },

            foldList: (e) => {
                let nodes = document.querySelectorAll("#root ul");
                for (node of nodes) {
                    node.style.display = "none";
                }
            },

            unfoldList: (e) => {
                let nodes = document.querySelectorAll("#root ul");
                for (node of nodes) {
                    node.style.display = "block";
                }
            }
        }
    })
</script>